{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "JinDFTest1"
		},
		"AmazonS31_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS31'"
		},
		"AzureBlobJsonSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobJsonSource'"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"jinblobcontainerlink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'jinblobcontainerlink'"
		},
		"taxiDBlink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'taxiDBlink'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"staging_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'staging'"
		},
		"AmazonS31_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAU4U7CBI7FSDJZDML"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ajintestlab9069.dfs.core.windows.net/"
		},
		"jinblobcontainerlink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ajintestlab9069.dfs.core.windows.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://jinkey.vault.azure.net/"
		},
		"staging_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ajintestlab9069.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Mapping Data Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "jinbucket1//pageviews_by_second_example.tsv"
							},
							{
								"name": "Destination",
								"value": "jinblobcontainer//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".tsv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "\"timestamp\"\t\"site\"\t\"requests\"",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "\"timestamp\"\t\"site\"\t\"requests\"",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S3SourceFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-05T00:54:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S3SourceFile')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLtoADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "data flow from SQL to ADLS",
				"activities": [
					{
						"name": "IngestIntoADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TripData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TripDataCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TripFaresIngest",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "medallion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "medallion",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "hack_license",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "hack_license",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "vendor_id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "vendor_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "pickup_datetime",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "pickup_datetime",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "fare_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "fare_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "surcharge",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "surcharge",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "mta_tax",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "mta_tax",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tip_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "tip_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tolls_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "tolls_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TripFaresSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TripFaresCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AggregateFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "IngestIntoADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "TripFaresIngest",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AggregateByPaymentType",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TripCSV": {},
									"TripFaresCSV": {},
									"SynapseSink": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "staging",
									"type": "LinkedServiceReference"
								},
								"folderPath": "jinblobcontainer/staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [
					"SQLtoADLS"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TripData')]",
				"[concat(variables('factoryId'), '/datasets/TripDataCSV')]",
				"[concat(variables('factoryId'), '/datasets/TripFaresSet')]",
				"[concat(variables('factoryId'), '/datasets/TripFaresCSV')]",
				"[concat(variables('factoryId'), '/dataflows/AggregateByPaymentType')]",
				"[concat(variables('factoryId'), '/linkedServices/staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "jinblobcontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "timestamp",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "requests",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobJsonSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "glossary.json",
						"folderPath": "source",
						"container": "source"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"glossary": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"GlossDiv": {
									"type": "object",
									"properties": {
										"title": {
											"type": "string"
										},
										"GlossList": {
											"type": "object",
											"properties": {
												"GlossEntry": {
													"type": "object",
													"properties": {
														"ID": {
															"type": "string"
														},
														"SortAs": {
															"type": "string"
														},
														"GlossTerm": {
															"type": "string"
														},
														"Acronym": {
															"type": "string"
														},
														"Abbrev": {
															"type": "string"
														},
														"GlossDef": {
															"type": "object",
															"properties": {
																"para": {
																	"type": "string"
																},
																"GlossSeeAlso": {
																	"type": "array",
																	"items": {
																		"type": "string"
																	}
																}
															}
														},
														"GlossSee": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobJsonSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S3SourceFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS31",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "jinbucket1",
						"fileName": "pageviews_by_second_example.tsv"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "timestamp",
						"type": "String"
					},
					{
						"name": "site",
						"type": "String"
					},
					{
						"name": "requests",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AmazonS31')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS31')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "",
					"accessKeyId": "[parameters('AmazonS31_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS31_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobJsonSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobJsonSource_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyselfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/jinintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowsample')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tglossary as (title as string, GlossDiv as (title as string, GlossList as (GlossEntry as (ID as string, SortAs as string, GlossTerm as string, Acronym as string, Abbrev as string, GlossDef as (para as string, GlossSeeAlso as string[]), GlossSee as string))))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source2\nsource2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tglossary as (title as string, GlossDiv as (title as string, GlossList as (GlossEntry as (ID as string, SortAs as string, GlossTerm as string, Acronym as string, Abbrev as string, GlossDef as (para as string, GlossSeeAlso as string[]), GlossSee as string))))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jinblobcontainerlink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "link to jinblobcontainer",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('jinblobcontainerlink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('jinblobcontainerlink_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "jinintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/jinintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/taxiDBlink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('taxiDBlink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "taxiDBlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "medallion",
						"type": "nvarchar"
					},
					{
						"name": "hack_license",
						"type": "nvarchar"
					},
					{
						"name": "vendor_id",
						"type": "nvarchar"
					},
					{
						"name": "rate_code",
						"type": "nvarchar"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "nvarchar"
					},
					{
						"name": "pickup_datetime",
						"type": "nvarchar"
					},
					{
						"name": "dropoff_datetime",
						"type": "nvarchar"
					},
					{
						"name": "passenger_count",
						"type": "nvarchar"
					},
					{
						"name": "trip_time_in_secs",
						"type": "nvarchar"
					},
					{
						"name": "trip_distance",
						"type": "nvarchar"
					},
					{
						"name": "pickup_longitude",
						"type": "nvarchar"
					},
					{
						"name": "pickup_latitude",
						"type": "nvarchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "nvarchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TripData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/taxiDBlink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripDataCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "jinblobcontainerlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "tripdata.csv",
						"fileSystem": "jinblobcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": "hack_license",
						"type": "String"
					},
					{
						"name": "vendor_id",
						"type": "String"
					},
					{
						"name": "rate_code",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "dropoff_datetime",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_time_in_secs",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "pickup_longitude",
						"type": "String"
					},
					{
						"name": "pickup_latitude",
						"type": "String"
					},
					{
						"name": "dropoff_longitude",
						"type": "String"
					},
					{
						"name": "dropoff_latitude",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jinblobcontainerlink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AggregateByPaymentType')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TripDataCSV",
								"type": "DatasetReference"
							},
							"name": "TripCSV"
						},
						{
							"dataset": {
								"referenceName": "TripFaresCSV",
								"type": "DatasetReference"
							},
							"name": "TripFaresCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AggregatedTaxiData",
								"type": "DatasetReference"
							},
							"name": "SynapseSink"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "AggregateByPaymentType"
						}
					],
					"script": "source(output(\n\t\tmedallion as string,\n\t\thack_license as string,\n\t\tvendor_id as string,\n\t\trate_code as string,\n\t\tstore_and_fwd_flag as string,\n\t\tpickup_datetime as string,\n\t\tdropoff_datetime as string,\n\t\tpassenger_count as string,\n\t\ttrip_time_in_secs as string,\n\t\ttrip_distance as string,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> TripCSV\nsource(output(\n\t\tmedallion as string,\n\t\thack_license as string,\n\t\tvendor_id as string,\n\t\tpickup_datetime as string,\n\t\tpayment_type as string,\n\t\tfare_amount as string,\n\t\tsurcharge as string,\n\t\tmta_tax as string,\n\t\ttip_amount as string,\n\t\ttolls_amount as string,\n\t\ttotal_amount as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> TripFaresCSV\nTripCSV, TripFaresCSV join(TripCSV@medallion == TripFaresCSV@medallion\n\t&& TripCSV@hack_license == TripFaresCSV@hack_license\n\t&& TripCSV@vendor_id == TripFaresCSV@vendor_id\n\t&& TripCSV@pickup_datetime == TripFaresCSV@pickup_datetime,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 aggregate(groupBy(payment_type),\n\taverage_fare = avg(toInteger(total_amount)),\n\t\ttotal_trip_distance = sum(toInteger(trip_distance))) ~> AggregateByPaymentType\nAggregateByPaymentType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> SynapseSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TripDataCSV')]",
				"[concat(variables('factoryId'), '/datasets/TripFaresCSV')]",
				"[concat(variables('factoryId'), '/datasets/AggregatedTaxiData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripFaresSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "taxiDBlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "medallion",
						"type": "nvarchar"
					},
					{
						"name": "hack_license",
						"type": "nvarchar"
					},
					{
						"name": "vendor_id",
						"type": "nvarchar"
					},
					{
						"name": "pickup_datetime",
						"type": "nvarchar"
					},
					{
						"name": "payment_type",
						"type": "nvarchar"
					},
					{
						"name": "fare_amount",
						"type": "nvarchar"
					},
					{
						"name": "surcharge",
						"type": "nvarchar"
					},
					{
						"name": "mta_tax",
						"type": "nvarchar"
					},
					{
						"name": "tip_amount",
						"type": "nvarchar"
					},
					{
						"name": "tolls_amount",
						"type": "nvarchar"
					},
					{
						"name": "total_amount",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TripFares"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/taxiDBlink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripFaresCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "jinblobcontainerlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "TripFares.csv",
						"fileSystem": "jinblobcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": "hack_license",
						"type": "String"
					},
					{
						"name": "vendor_id",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "surcharge",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jinblobcontainerlink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsecredential')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/d47241c8-c78d-4dd4-a3d0-683e00aba7e6/resourceGroups/RS1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ADFmanagedidentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/credential1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/d47241c8-c78d-4dd4-a3d0-683e00aba7e6/resourceGroups/RS1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ADFmanagedidentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AggregatedTaxiData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "AggregatedTaxi"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('staging_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('staging_accountKey')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}